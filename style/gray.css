#gray .rows label + label {
    flex-shrink: 1;
}

#gray .rows :is(input[type=checkbox] ~ label, button) {
    height: 100%;
    padding: 0 0.5rem;
    margin-left: 0.5rem;

    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius);
    background-color: var(--muted);
    color: var(--hover);
}

#gray .rows label + input[type=checkbox] + label {
    transition-duration: var(--transition);
    transition-property: background-color, opacity;
}

#gray .rows label + input[type=checkbox]:checked + label.red {
    background-color: var(--red);
}

#gray .rows label + input[type=checkbox]:checked + label.green {
    background-color: var(--green);
}

#gray .rows label + input[type=checkbox]:checked + label.blue {
    background-color: var(--blue);
}

#gray .rows button {
    border: 2px solid;
    width: 5rem;
}

#gray .rows button + input[type=checkbox] ~ label {
    width: 4rem;
    color: var(--muted);
    background-color: var(--hover);
}

#gray .rows button + input[type=checkbox]:checked + label {
    display: none;
}

#gray .rows button + input[type=checkbox]:not(:checked) + label + label {
    display: none;
}

#gray :is(.rows button.light, .picker .color.light) {
    color: black;
    border-color: black;
    background-color: white;
}

#gray :is(.rows button.dark, .picker .color.dark) {
    color: white;
    border-color: white;
    background-color: black;
}

#gray .bot {
    height: 6.5rem;
    position: relative;
}

#gray:not(.open) .bot :is(.rows, .picker) {
    display: none;
}

#gray .bot :is(.rows, .picker) {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    background-color: var(--background);
}

#gray :where(.bot:not(.pick) .rows, .bot.pick .picker) {
    transition: transform var(--transition);
    transform: translateX(0) scale(1);
    visibility: visible;
}

#gray :where(.bot.pick .rows, .bot:not(.pick) .picker) {
    transition: transform var(--transition), visibility 0s var(--transition);
    pointer-events: none;
    visibility: hidden;
}

#gray .bot.pick .rows {
    transform: translateX(0) scale(var(--scale));
}

#gray .bot:not(.pick) .picker {
    transform: translateX(100%) scale(1);
}

#gray .picker span:first-child {
    width: 0;
    flex-grow: 1;
    max-width: min-content;
}

#gray .picker span + span {
    flex-shrink: 1;
    margin-left: 0.25rem;
}

#gray .picker .gray {
    margin-left: auto;
    padding-left: 0.25rem;
    align-items: center;
    display: flex;
}

#gray .picker .color {
    border: 2px solid;
    border-radius: var(--radius);
    background-color: var(--hover);

    display: flex;
    align-items: center;
    justify-content: center;
}

#gray .picker .color.light * {
    color: var(--background);
}

#gray .picker .color.dark * {
    color: var(--foreground);
}

#gray .picker .color span {
    width: 1rem;
    flex-grow: 0;
    max-width: unset;
    text-align: right;
}

#gray .picker .color input[type=text] {
    width: 5rem;
    text-align: center;
    margin-right: 1rem;
}

#gray .picker .row:last-child {
    justify-content: space-evenly;
}

#gray .picker button {
    width: 6rem;
    height: 100%;
    font-weight: 900;
    color: var(--inverse);
}
